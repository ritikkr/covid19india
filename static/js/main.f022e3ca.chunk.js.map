{"version":3,"sources":["logo.svg","Components/images/coronavirus.svg","Components/images/coronavirus_black.svg","Components/Header.js","API/index.js","Components/Body.js","App.js","reportWebVitals.js","index.js"],"names":["Header","this","props","checkBoxfunction","checkbox","ModeLight","ModeDark","document","getElementById","style","color","Navbar","bg","variant","className","id","Brand","href","alt","src","darkCovidlogo","covidImg","width","height","Nav","Form","inline","class","type","onClick","event","checkboxChanged","for","FormControl","placeholder","Button","Component","fetchDailyData","a","axios","get","response","data","statewise","Body","state","dailyData","lastupdatetime","contents","map","item","confirmed","initialDailyData","setState","lastupdatedtime","fetchMyAPI","borderBottom","Table","striped","bordered","hover","size","textAlign","recovered","deaths","APP","bind","check","checked","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f022e3ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/coronavirus.0918859c.svg\";","export default __webpack_public_path__ + \"static/media/coronavirus_black.5bfa8b6f.svg\";","import React, { Component } from 'react';\r\nimport {Navbar, Nav, Form, FormControl, Button} from 'react-bootstrap';\r\nimport covidImg from './images/coronavirus.svg';\r\nimport darkCovidlogo from './images/coronavirus_black.svg';\r\nimport './Header.css'\r\nclass Header extends Component {\r\n    \r\n    checkboxChanged(){\r\n      this.props.checkBoxfunction()\r\n      if(this.props.checkbox === false)\r\n      {\r\n        this.ModeLight();\r\n      }\r\n      else{\r\n        this.ModeDark();\r\n      }\r\n    }\r\n    ModeLight()\r\n    {\r\n     document.getElementById(\"customSwitch2label\").style.color = \"black\";\r\n    }\r\n    ModeDark()\r\n    {\r\n      // document.getElementById(\"customSwitch2label\").innerText = \"Dark\";\r\n    }\r\n    render() { \r\n        return ( \r\n    <Navbar bg={ this.props.checkbox ? \"light\":\"dark\"} variant={ this.props.checkbox ? \"light\":\"dark\"} className=\"d-flex align-items-center\" id=\"navbar\">\r\n   <Navbar.Brand href=\"#home\">\r\n      <img\r\n        alt=\"\"\r\n        src={ this.props.checkbox ?  darkCovidlogo : covidImg}\r\n        width=\"30\"\r\n        height=\"30\"\r\n        className=\"d-inline-block align-top\"\r\n        id=\"covidLogo\"\r\n      />{' '}\r\n      Covid19\r\n    </Navbar.Brand>\r\n    <Nav className=\"mr-auto\">    \r\n    </Nav>\r\n    <Form inline>\r\n    <div class=\"custom-control custom-switch mr-2\">\r\n  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customSwitch2\" onClick={ (event) =>{this.checkboxChanged()}}/>\r\n  <label class=\"custom-control-label\" for=\"customSwitch2\" style={{color:\"white\"}} id=\"customSwitch2label\">{this.props.checkbox ? <span class=\"toggle_71bT\">ðŸŒž</span>: <span class=\"toggle_71bT\">ðŸŒœ</span>}</label>\r\n    </div>      \r\n      <FormControl type=\"text\" placeholder=\"State ...\" className=\"mr-sm-2\" />\r\n      <Button variant={ this.props.checkbox ? \"outline-dark\":\"outline-light\"}>Search</Button>\r\n    </Form>\r\n  </Navbar>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import axios from 'axios';\r\n\r\nconst url = 'https://api.covid19india.org/data.json';\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const response  = await axios.get(url);\r\n      return response.data.statewise;\r\n     } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { fetchDailyData } from \"../API\";\r\n\r\nclass Body extends Component {\r\n  state = {\r\n      dailyData: [],\r\n      lastupdatetime: 'Not Available',\r\n  };\r\n\r\n    componentDidMount()\r\n    {\r\n        const fetchMyAPI = async () => {\r\n        const initialDailyData = await fetchDailyData();\r\n         \r\n        this.setState({\r\n            dailyData: initialDailyData,\r\n            lastupdatedtime: initialDailyData[0].lastupdatedtime\r\n          })\r\n        };\r\n        fetchMyAPI();\r\n    }\r\n\r\n     contents = this.state.dailyData.map(item => {\r\n        // change the title and location key based on your API\r\n        return <tr>\r\n          <td>{item.state}</td> \r\n          <td>{item.confirmed}</td>\r\n        </tr>\r\n   })\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Body my-3 d-flex flex-column align-items-center\">\r\n      <h3 style={{borderBottom:\"2px solid black\"}}>StateWise Covid-19 India Report </h3>\r\n      <p>Last Updated :- {this.state.lastupdatedtime}</p>\r\n        <Table striped bordered hover size=\"sm\" variant={ this.props.checkbox ? \"light\":\"dark\"} style={{width:\"70%\"}}>\r\n          <thead>\r\n            <tr>\r\n              <th>State Name</th>\r\n              <th>Total Confirmed</th>\r\n              <th>Recovered</th>\r\n              <th>Death</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.dailyData.map(event => (\r\n              <tr>\r\n                  <td>{event.state}</td>\r\n                  <td style={{textAlign:\"center\"}}>{event.confirmed}</td>\r\n                  <td style={{textAlign:\"center\"}}>{event.recovered}</td>\r\n                  <td style={{textAlign:\"center\"}}>{event.deaths}</td>\r\n               </tr>))\r\n               }\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Body;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport Header from \"./Components/Header\";\r\nimport Body from \"./Components/Body\";\r\n\r\nclass APP extends Component {\r\n  state = {\r\n    checkbox: false,\r\n  };\r\n  constructor(props){\r\n    super(props)\r\n    this.checkBoxfunction = this.checkBoxfunction.bind(this)\r\n  }\r\n\r\n  checkBoxfunction() {\r\n    var check = document.getElementById(\"customSwitch2\").checked;\r\n    this.setState(\r\n      {\r\n        checkbox: check,\r\n      },\r\n      () => {\r\n        console.log(this.state.checkbox);\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(\"CheckBox Updation(APP.JS) Mount\", this.state.checkbox)\r\n    this.checkBoxfunction();\r\n  }\r\n \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header checkbox={this.state.checkbox} checkBoxfunction={this.checkBoxfunction} />\r\n        <Body checkbox={this.state.checkbox}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default APP;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}